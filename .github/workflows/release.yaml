# 工作流名称
name: GoReleaser Build

on:
  release:
    types: [created] # 当在 GitHub 上创建新的 Release 时触发

jobs:
  # 整个发布流程只需要一个 Job
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      # 步骤1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # GoReleaser 需要完整的 git 历史来生成变更日志 (Changelog)
          # fetch-depth: 0 会拉取所有历史记录
          fetch-depth: 0

      # 步骤2: 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          # 从您的旧配置中保留 Go 版本
          go-version: '^1.24'
          cache: true

      # 步骤3: 运行 GoReleaser
      # 这是核心步骤，它会读取 .goreleaser.yml 文件并执行所有操作
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          # 'release' 是 GoReleaser 的命令
          # '--clean' 参数会在发布前清理 dist 目录，确保构建干净
          args: release --clean
        env:
          # GITHUB_TOKEN 是由 GitHub 自动提供的，用于授权 GoReleaser 上传产物到 Release
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
